package jp.rte.core.utils.request;

import javax.servlet.http.HttpServletRequest;

public class RequestUrl {

    /**
     *
     * @param request
     * @return
     */
    public static String createURL(HttpServletRequest request) {
        StringBuffer url = new StringBuffer();
        url.append(createHost(request));
        url.append(request.getRequestURI());
        String query = request.getQueryString();
        if (query != null && !query.equals("null")) {
            url.append("?").append(query);
        }
        return url.toString();
    }

    /**
     *
     * @param request
     * @return
     */
    public static String createPath(HttpServletRequest request) {
        StringBuffer url = new StringBuffer();
        url.append(request.getRequestURI());
        String query = request.getQueryString();
        if (query != null && !query.equals("null")) {
            url.append("?").append(query);
        }
        return url.toString();
    }

    /**
     *
     * @param request
     * @return
     */
    public static String createURLWithQuery(HttpServletRequest request,
            String query) {
        StringBuffer url = new StringBuffer();
        url.append(createHost(request));
        url.append(query);
        return url.toString();
    }

    /**
     *
     * @param request
     * @return
     */
    public static String createURLWithKey(HttpServletRequest request, String key) {
        StringBuffer url = new StringBuffer();
        url.append(createURLWithQuery(request, request.getRequestURI()
            + "/"
            + key));
        return url.toString();
    }

    /**
     *
     * @param request
     * @return
     */
    public static String createHost(HttpServletRequest request) {
        StringBuffer url = new StringBuffer();
        url.append(request.getScheme());
        url.append("://");
        url.append(request.getServerName());
        if ((request.getScheme().equals("http") && (request.getServerPort() != 80))
            || (request.getScheme().equals("https") && (request.getServerPort() != 443))) {
            url.append(':');
            url.append(request.getServerPort());
        }
        return url.toString();

    }
}
