package jp.rte.core.utils.xml;

import java.io.IOException;
import java.io.InputStream;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.apache.http.HttpEntity;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.xml.sax.SAXException;

public class ParseXmlUtils {

    public static Element getElement(HttpEntity entity) {
        Element element = null;
        if (entity != null) {
            try {
                InputStream content = entity.getContent();
                // ドキュメントビルダーファクトリを生成
                DocumentBuilderFactory dbfactory =
                    DocumentBuilderFactory.newInstance();
                // ドキュメントビルダーを生成
                DocumentBuilder builder = dbfactory.newDocumentBuilder();
                // パースを実行してDocumentオブジェクトを取得
                Document doc = builder.parse(content);
                // ルート要素を取得
                element = doc.getDocumentElement();
            } catch (IllegalStateException e) {
                // TODO 自動生成された catch ブロック
                e.printStackTrace();
            } catch (IOException e) {
                // TODO 自動生成された catch ブロック
                e.printStackTrace();
            } catch (ParserConfigurationException e) {
                // TODO 自動生成された catch ブロック
                e.printStackTrace();
            } catch (SAXException e) {
                // TODO 自動生成された catch ブロック
                e.printStackTrace();
            }

        }
        return element;
    }
}
