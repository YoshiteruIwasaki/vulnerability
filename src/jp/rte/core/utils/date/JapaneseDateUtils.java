package jp.rte.core.utils.date;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;

public class JapaneseDateUtils {

    public static String makeJapaneseDateTime(Date date) {
        DateFormat df = new SimpleDateFormat("yyyy年M月d日 H:mm");
        df.setTimeZone(TimeZone.getTimeZone("JST"));
        return df.format(date);
    }

    public static String makeJapaneseDate(Date date) {
        DateFormat df = new SimpleDateFormat("yyyy年M月d日");
        df.setTimeZone(TimeZone.getTimeZone("JST"));
        return df.format(date);
    }

    public static int getTodayDay() {
        TimeZone timeZone = TimeZone.getTimeZone("JST");
        Calendar cal = Calendar.getInstance(timeZone);
        return cal.get(Calendar.DAY_OF_WEEK);
    }

    public static Boolean isTodayDay(int checkDay) {
        int todayDay = getTodayDay();
        return todayDay == checkDay ? true : false;
    }

    /**
     * 現在の曜日を返します。
     *
     * @return 現在の曜日
     */
    public static String getDayOfTheWeek() {
        int todayDay = getTodayDay();
        switch (todayDay) {
        case Calendar.SUNDAY:
            return "日曜日";
        case Calendar.MONDAY:
            return "月曜日";
        case Calendar.TUESDAY:
            return "火曜日";
        case Calendar.WEDNESDAY:
            return "水曜日";
        case Calendar.THURSDAY:
            return "木曜日";
        case Calendar.FRIDAY:
            return "金曜日";
        case Calendar.SATURDAY:
            return "土曜日";
        }
        throw new IllegalStateException();
    }

    /**
     * 現在の曜日を返します。 ※曜日は省略します。
     *
     * @return 現在の曜日
     */
    public static String getDayOfTheWeekShort() {
        int todayDay = getTodayDay();
        switch (todayDay) {
        case Calendar.SUNDAY:
            return "日";
        case Calendar.MONDAY:
            return "月";
        case Calendar.TUESDAY:
            return "火";
        case Calendar.WEDNESDAY:
            return "水";
        case Calendar.THURSDAY:
            return "木";
        case Calendar.FRIDAY:
            return "金";
        case Calendar.SATURDAY:
            return "土";
        }
        throw new IllegalStateException();
    }
}
